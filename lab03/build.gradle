// Apply the java plugin to add support for Java
buildscript {
    repositories{
        flatDir dirs: 'proguard6.2.2/lib'
    }
    dependencies {
        classpath ':proguard'
    }
}

apply plugin: 'java'
apply plugin: 'application'

ext {
   javaMainClass = 'csci2020u.lab03.CSVDemo'
}
 
application {
    mainClassName = javaMainClass
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'

    implementation 'org.apache.commons:commons-csv:1.7'
}

//this is for manidesy warning
sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes  'Main-Class': 'csci2020u.lab03.CSVDemo',
                    'Implementation-Title': 'CSV-Demo',
                    'Implementation-Version': version
    }
}

//RUN: gradle jar

//for proguard,before 'plugin' add this

//to minify the code 

task (minify, dependsOn: 'jar', type: proguard.gradle.ProGuardTask) {
    configuration 'proguard.cfg'
    injars 'build/libs/lab03-1.0.jar'
    outjars 'build/libs/lab03-1.0.min.jar'

}